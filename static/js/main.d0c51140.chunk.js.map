{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","newPage","_jsxs","className","children","_jsx","cn","disabled","href","onClick","handlePrevPage","map","page","active","concat","handleNextPage","items","App","setCurrentPage","useState","itemsPerPage","setItemsPerPage","firstItemIndex","calculateLastItemIndex","lastItemIndex","length","id","onChange","e","handleItemsPerPageChange","newPerPage","Number","target","value","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAmB,GAEzB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGF,MAAMG,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAc,EAAC,aACfC,GACDJ,EACC,MAAMK,EAAaC,KAAKC,KAAKN,EAAQC,GAM/BM,EAAoBC,IACpBA,IAAYN,GACdC,EAAaK,IAgBjB,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBZ,IAAqBS,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QAdeC,KACjBf,EAAc,GAChBK,EAAiBL,EAAc,IAYHS,SACzB,WA9BEnB,EAAW,EAAGY,GAmCKc,KAAKC,GAC3BP,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEO,OAAQlB,IAAgBiB,IAAQR,SAC/DC,cAAA,KACE,UAAQ,WAERF,UAAU,YACVK,KAAI,IAAAM,OAAMF,GACVH,QAASA,IAAMT,EAAiBY,GAAMR,SAErCQ,GALIA,OAUXP,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUZ,IAAgBE,IAAcO,SACvEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeb,IAAgBE,EAC/BY,QA9CeM,KACjBpB,EAAcE,GAChBG,EAAiBL,EAAc,IA4CHS,SACzB,eCtEHY,EAAQ/B,EAAW,EAAG,IAAI0B,KAAKtB,GAAC,QAAAyB,OAAazB,KAEtC4B,EAAgBA,KAC3B,MAAOtB,EAAauB,GAAkBC,mBAAS,IACxCC,EAAcC,GAAmBF,mBAAS,GAC3CG,GAAkB3B,EAAc,GAAKyB,EACrCG,EAAiCD,EAAiBF,EAClDI,EACJD,EAAyBP,EAAMS,OAC7BT,EAAMS,OACNF,EAOJ,OACErB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAU,OACvBnB,EAAW,YAAAmB,OAClBQ,EAAiB,EAAC,OAAAR,OACdU,EAAa,QAAAV,OAAOE,EAAMS,OAAM,OAGxCvB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACRwB,GAAG,kBACHvB,UAAU,eACVwB,SAAWC,IAAMC,OArBOC,EAqBkBC,OAAOH,EAAEI,OAAOC,OApBlEZ,EAAgBS,QAChBZ,EAAe,GAFiBY,OAsBxBG,MAAOb,EAAahB,SAAA,CAEpBC,cAAA,UAAQ4B,MAAM,IAAG7B,SAAC,MAClBC,cAAA,UAAQ4B,MAAM,IAAG7B,SAAC,MAClBC,cAAA,UAAQ4B,MAAM,KAAI7B,SAAC,OACnBC,cAAA,UAAQ4B,MAAM,KAAI7B,SAAC,YAIvBC,cAAA,SAAO6B,QAAQ,kBAAkB/B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACd,EAAU,CACTE,MAAOuB,EAAMS,OACb/B,QAAS0B,EACTzB,YAAaA,EACbC,aAAcsB,IAEhBb,cAAA,MAAAD,SACGY,EAAMmB,MAAMb,EAAgBE,GAAeb,KAAKyB,GAC/C/B,cAAA,MAAI,UAAQ,OAAMD,SAAagC,GAAPA,WC1DlCC,IAASC,OAAOjC,cAACY,EAAG,IAAKsB,SAASC,eAAe,U","file":"static/js/main.d0c51140.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers:number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const getTotalNumbersArray = (): number[] => {\n    return getNumbers(1, totalPages);\n  };\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage !== currentPage) {\n      onPageChange(newPage);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {getTotalNumbersArray().map((page) => (\n        <li className={cn('page-item', { active: currentPage === page })}>\n          <a\n            data-cy=\"pageLink\"\n            key={page}\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: currentPage === totalPages })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const firstItemIndex = (currentPage - 1) * itemsPerPage;\n  const calculateLastItemIndex: number = firstItemIndex + itemsPerPage;\n  const lastItemIndex\n  = calculateLastItemIndex > items.length\n    ? items.length\n    : calculateLastItemIndex;\n\n  const handleItemsPerPageChange = (newPerPage: number) => {\n    setItemsPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${\n          firstItemIndex + 1\n        } - ${lastItemIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => handleItemsPerPageChange(Number(e.target.value))}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {items.slice(firstItemIndex, lastItemIndex).map((item) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}