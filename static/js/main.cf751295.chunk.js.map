{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","newPage","_jsxs","className","children","_jsx","cn","disabled","href","onClick","getTotalNumbersArray","numbers","i","push","map","page","active","concat","items","from","to","n","getNumbers","App","setCurrentPage","useState","itemsPerPage","setItemsPerPage","firstItemIndex","calculateLastItemIndex","lastItemIndex","length","id","onChange","e","handleItemsPerPageChange","newPerPage","Number","target","value","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf751295.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const getTotalNumbersArray = (): number[] => {\n    const numbers: number[] = [];\n\n    for (let i = 1; i <= totalPages; i += 1) {\n      numbers.push(i);\n    }\n\n    return numbers;\n  };\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage !== currentPage) {\n      onPageChange(newPage);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage > 1) {\n              handlePageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {getTotalNumbersArray().map((page) => (\n        <li className={cn('page-item', { active: currentPage === page })}>\n          <a\n            data-cy=\"pageLink\"\n            key={page}\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: currentPage === totalPages })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => {\n            if (currentPage < totalPages) {\n              handlePageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const firstItemIndex = (currentPage - 1) * itemsPerPage;\n  const calculateLastItemIndex: number = firstItemIndex + itemsPerPage;\n  const lastItemIndex\n  = calculateLastItemIndex > items.length\n    ? items.length\n    : calculateLastItemIndex;\n\n  const handleItemsPerPageChange = (newPerPage: number) => {\n    setItemsPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${\n          firstItemIndex + 1\n        } - ${lastItemIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => handleItemsPerPageChange(Number(e.target.value))}\n            value={itemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => {\n          setCurrentPage(page);\n        }}\n      />\n      <ul>\n        {items.slice(firstItemIndex, lastItemIndex).map((item) => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers:number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}